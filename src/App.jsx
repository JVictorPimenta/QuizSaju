import { useState, useEffect, useMemo } from "react";
import "./App.css";

const questions = [
  {
    question: "O que √© o MAB?",
    options: [
      "Um grupo que defende empresas de barragens",
      "Um movimento que luta pelos direitos das pessoas atingidas por barragens",
      "Uma empresa",
      "Um √≥rg√£o do governo"
    ],
    answer: 1
  },
  {
    question: "O que quer dizer ‚Äúatingido por barragem‚Äù?",
    options: [
      "Pessoa que gosta de nadar em represas",
      "Pessoa que perdeu casa, terra ou renda por causa de uma barragem",
      "Pessoa que trabalha construindo barragens",
      "Pessoa que vive na cidade grande"
    ],
    answer: 1
  },
  {
    question: "O que o MAB defende sobre a √°gua e a energia?",
    options: [
      "Que s√£o produtos para vender",
      "Que s√£o mercadorias valiosas",
      "Que s√£o direitos de todos, n√£o mercadorias",
      "Que devem ser controladas s√≥ por empresas"
    ],
    answer: 2
  },
  {
    question: "Qual √© um dos principais riscos da privatiza√ß√£o dos servi√ßos de abastecimento de √°gua e saneamento?",
    options: [
      "Aumento da qualidade da √°gua",
      "Redu√ß√£o das tarifas para a popula√ß√£o",
      "Exclus√£o de comunidades mais pobres do acesso √† √°gua",
      "Melhora na efici√™ncia do tratamento de esgoto"
    ],
    answer: 2
  },
  {
    question: "O que o relat√≥rio t√©cnico do SENGE-SC destacou sobre o rompimento da lagoa?",
    options: [
      "Foi um evento natural inevit√°vel",
      "Resultou de falhas estruturais e aus√™ncia de manuten√ß√£o preventiva",
      "Causado por sabotagem externa",
      "Sem impacto ambiental relevante"
    ],
    answer: 1
  },
  {
    question: "Quem s√£o as principais v√≠timas da privatiza√ß√£o da √°gua?",
    options: [
      "Ind√∫strias e grandes empresas",
      "Comunidades perif√©ricas e popula√ß√µes vulner√°veis",
      "Governos e pol√≠ticos",
      "Organiza√ß√µes n√£o governamentais"
    ],
    answer: 1
  },
  {
    question: "Quem faz parte do MAB?",
    options: [
      "S√≥ engenheiros e pol√≠ticos",
      "Fam√≠lias ribeirinhas, agricultores e moradores de comunidades atingidas",
      "Somente moradores de grandes cidades",
      "Apenas pescadores"
    ],
    answer: 1
  },
  {
    question: "O que √© a Lagoa de Evapoinfiltra√ß√£o (LEI)?",
    options: [
      "Uma lagoa natural utilizada para lazer",
      "Uma estrutura para tratamento e disposi√ß√£o final de esgoto dom√©stico",
      "Um reservat√≥rio de √°gua pot√°vel",
      "Uma √°rea de pesca artesanal"
    ],
    answer: 1
  },
  {
    question: "O que causou o desastre na Lagoa da Concei√ß√£o em 2021?",
    options: [
      "Muita chuva e tempestades",
      "Um rompimento na estrutura da CASAN que guardava esgoto tratado",
      "Aumento do turismo",
      "O vento forte"
    ],
    answer: 1
  },
  {
    question: "O que aconteceu com a lagoa depois do rompimento?",
    options: [
      "A √°gua ficou mais limpa",
      "Libera√ß√£o de esgoto, prolifera√ß√£o de algas e polui√ß√£o cr√¥nica",
      "Peixes voltaram em maior n√∫mero",
      "Nada mudou"
    ],
    answer: 1
  },
  {
    question: "Por que o desastre n√£o foi natural, segundo os pesquisadores?",
    options: [
      "Porque foi culpa da chuva",
      "Porque foi causado por erro humano e descaso ambiental",
      "Porque foi um terremoto",
      "Porque foi no ver√£o"
    ],
    answer: 1
  },
  {
    question: "O que foi encontrado na √°gua da lagoa depois do rompimento?",
    options: [
      "√Ågua limpa e pura",
      "Res√≠duos, micropl√°sticos e sujeiras do esgoto",
      "Somente areia",
      "Peixes coloridos"
    ],
    answer: 1
  },
  {
    question: "Ap√≥s o rompimento, o que foi feito para conter os efluentes liberados?",
    options: [
      "Nada foi feito; os efluentes se dispersaram livremente",
      "Foram criadas √°reas artificiais para reter os efluentes e evitar maior contamina√ß√£o",
      "Os efluentes foram bombeados para outras regi√µes",
      "A √°gua da lagoa foi filtrada e tratada imediatamente"
    ],
    answer: 1
  },
  {
    question: "Qual foi o impacto ambiental das √°reas artificiais criadas ap√≥s o rompimento?",
    options: [
      "Aumento da biodiversidade e recupera√ß√£o da vegeta√ß√£o local",
      "Diminui√ß√£o da diversidade de esp√©cies e altera√ß√£o da vegeta√ß√£o de restinga",
      "Melhora na qualidade da √°gua da lagoa",
      "Nenhum impacto ambiental foi observado"
    ],
    answer: 1
  },
  {
    question: "Quem mais sofreu com o desastre da Lagoa da Concei√ß√£o?",
    options: [
      "Os turistas",
      "As fam√≠lias e pescadores que vivem da lagoa",
      "As empresas",
      "Os hot√©is"
    ],
    answer: 1
  },
  {
    question: "A Lagoa da Concei√ß√£o √© importante s√≥ por causa do turismo?",
    options: [
      "Sim, s√≥ pelo turismo",
      "N√£o! √â parte da hist√≥ria e da cultura das pessoas da regi√£o",
      "√â apenas um local para esportes",
      "√â uma √°rea de empresas"
    ],
    answer: 1
  },
  {
    question: "Quanto de mat√©ria org√¢nica foi liberado no rompimento?",
    options: [
      "Cerca de 13 mil litros",
      "Mais de 130 milh√µes de litros",
      "Menos de 1 milh√£o de litros",
      "Aproximadamente 500 mil litros"
    ],
    answer: 1
  },
  {
    question: "Quantas fam√≠lias perderam casas e bens com o rompimento em Monte Cristo (2023)?",
    options: [
      "50 fam√≠lias",
      "200 fam√≠lias",
      "1.000 fam√≠lias",
      "Nenhuma fam√≠lia"
    ],
    answer: 1
  }
];

// üîÅ Fun√ß√£o para embaralhar op√ß√µes
function shuffleOptions(options) {
  const arr = options.map((opt, i) => ({ opt, i }));
  for (let i = arr.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

export default function QuizGame() {
  const [current, setCurrent] = useState(0);
  const [score, setScore] = useState(0);
  const [showResult, setShowResult] = useState(false);
  const [selected, setSelected] = useState(null);
  const [timeLeft, setTimeLeft] = useState(20);

  // Embaralha as op√ß√µes da pergunta atual
  const shuffledOptions = useMemo(() => shuffleOptions(questions[current].options), [current]);

  // üïí Temporizador
  useEffect(() => {
    if (timeLeft <= 0) {
      handleAnswer(null);
      return;
    }
    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
    return () => clearTimeout(timer);
  }, [timeLeft]);

  useEffect(() => {
    setTimeLeft(20);
    setSelected(null);
  }, [current]);

  // üéØ Fun√ß√£o de resposta
  function handleAnswer(index) {
    if (selected !== null) return;
    setSelected(index);

    // Verifica o √≠ndice original da resposta
    const chosenOption = index !== null ? shuffledOptions[index].i : null;
    if (chosenOption === questions[current].answer) {
      setScore(score + 1);
    }

    setTimeout(() => {
      const next = current + 1;
      if (next < questions.length) {
        setCurrent(next);
      } else {
        setShowResult(true);
      }
    }, 1000);
  }

  // üîÅ Fun√ß√£o para reiniciar tudo
  function resetQuiz() {
    setCurrent(0);
    setScore(0);
    setShowResult(false);
    setSelected(null);
    setTimeLeft(20);
  }

  // üßÆ C√°lculo da barra de progresso
  const progress = ((current + 1) / questions.length) * 100;

  // üèÅ Tela de resultados
  if (showResult) {
    return (
      <div className="quiz-container result">
        <h1>Fim do Quiz!</h1>
        <p>Voc√™ acertou {score} de {questions.length} perguntas.</p>
        <button className="default" onClick={resetQuiz}>
          Tentar novamente
        </button>
      </div>
    );
  }

  const q = questions[current];

  // üß© Tela principal
  return (
    <div className="quiz-container">
      <div className="top-bar">
        <div className="progress-bar-container">
          <div className="progress-bar" style={{ width: `${progress}%` }}></div>
        </div>
        <button className="restart-btn" onClick={resetQuiz}>
          üîÅ Reiniciar
        </button>
      </div>

      <h2>Pergunta {current + 1} / {questions.length}</h2>
      <div className="timer">Tempo: {timeLeft}s</div>

      <p>{q.question}</p>

      <div className="options-grid">
        {shuffledOptions.map((item, i) => {
          let className = "default";
          if (selected !== null) {
            if (item.i === q.answer) className = "correct";
            else if (i === selected) className = "wrong";
            else className = "disabled";
          }
          return (
            <button
              key={i}
              className={className}
              onClick={() => handleAnswer(i)}
              disabled={selected !== null}
            >
              {item.opt}
            </button>
          );
        })}
      </div>
    </div>
  );
}
